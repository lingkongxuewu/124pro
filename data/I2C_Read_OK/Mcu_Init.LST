C51 COMPILER V7.06   MCU_INIT                                                              08/13/2010 10:00:45 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE MCU_INIT
OBJECT MODULE PLACED IN Mcu_Init.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE Mcu_Init.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          #include <compiler_defs.h>
   2          #include <c8051F500_defs.h>
   3          
   4          
   5          
   6          #include "Mcu_Init.h"
   7          #include "MyFlash.h"
   8          #include "Precision_Calibration.h"
   9          #include "stdio.h"
  10          #include "interrupt_isr.h"
  11          //-----------------------------------------------------------------------------
  12          // Initialization Subroutines
  13          //-----------------------------------------------------------------------------
  14          
  15          
  16          //-----------------------------------------------------------------------------
  17          // OSCILLATOR_Init
  18          //-----------------------------------------------------------------------------
  19          
  20          void OSCILLATOR_Init (void)
  21          {
  22   1         U8 sfrpage_save = SFRPAGE;
  23   1         SFRPAGE = CONFIG_PAGE;
  24   1      
  25   1         OSCICN = 0xD6;                      
  26   1      //   RSTSRC = 0x04;                    
  27   1         SFRPAGE = sfrpage_save;
  28   1      
  29   1      
  30   1      }
  31          
  32          //-----------------------------------------------------------------------------
  33          // PORT_Init
  34          //-----------------------------------------------------------------------------
  35          
  36          void PORT_Init (void)
  37          {
  38   1         U8 sfrpage_save = SFRPAGE;
  39   1         SFRPAGE  = CONFIG_PAGE;  
  40   1         P0SKIP |= 0x01;                     // Skip P0.0 (VREF)
  41   1       //  P1SKIP |= 0x0E;                     // Skip P1.2 (ADC input)        
  42   1         P0MDOUT  |= 0x50;                   
  43   1         P0MDIN  &= ~0x01;                   // Set VREF to analog
  44   1      //   P1MDOUT  |= 0x08;       
  45   1         P1MDOUT  |= 0x00;
  46   1      //   P2MDIN  &= ~0x02;   
  47   1         XBR0     = 0x03;                    
  48   1         XBR2     = 0x40;                    
  49   1         SFRPAGE = sfrpage_save;
  50   1      }
  51          
  52          
  53          //-----------------------------------------------------------------------------
  54          // UART0_Init
  55          //-----------------------------------------------------------------------------
C51 COMPILER V7.06   MCU_INIT                                                              08/13/2010 10:00:45 PAGE 2   

  56          void UART0_Init (void)
  57          {
  58   1         U8 sfrpage_save = SFRPAGE;
  59   1         SFRPAGE = CONFIG_PAGE;
  60   1      
  61   1         SCON0 = 0x10;                       
  62   1      
  63   1         // Baud Rate = [BRG Clock / (65536 - (SBRLH0:SBRLL0))] x 1/2 x 1/Prescaler
  64   1      
  65   1      #if   ((SYSCLK / BAUDRATE / 2 / 0xFFFF) < 1)
  66   1            SBRL0 = -(SYSCLK / BAUDRATE / 2);
  67   1            SBCON0 |= 0x03;                  // Set prescaler to 1*/
  68   1      #elif ((SYSCLK / BAUDRATE / 2 / 0xFFFF) < 4)
                    SBRL0 = -(SYSCLK / BAUDRATE / 2 / 4);
                    SBCON0 &= ~0x03;
                    SBCON0 |= 0x01;                  // Set prescaler to 4
              #elif ((SYSCLK / BAUDRATE / 2 / 0xFFFF) < 12)
                    SBRL0 = -(SYSCLK / BAUDRATE / 2 / 12);
                    SBCON0 &= ~0x03;                 // Set prescaler to 12
              #else
                    SBRL0 = -(SYSCLK / BAUDRATE / 2 / 48);
                    SBCON0 &= ~0x03;
                    SBCON0 |= 0x02;                  // Set prescaler to 48
              #endif
  80   1      
  81   1         SBCON0 |= 0x40;                     // Enable baud rate generator
  82   1         TI0 = 1;                            // Indicate TX0 ready
  83   1      
  84   1         SFRPAGE = sfrpage_save;
  85   1      }
  86          
  87          //-----------------------------------------------------------------------------
  88          // TIMER2_Init
  89          //-----------------------------------------------------------------------------
  90          void TIMER2_Init (U16 counts)
  91          {
  92   1         U8 sfrpage_save = SFRPAGE;
  93   1         SFRPAGE = ACTIVE_PAGE;
  94   1      
  95   1         TMR2CN  = 0x00;                     // Stop Timer2; Clear TF2;
  96   1                                             // use SYSCLK/12 as timebase
  97   1         CKCON  &= ~0x60;                    // Timer2 clocked based on T2XCLK;
  98   1      
  99   1         TMR2RL  = -counts;                  // Init reload values
 100   1         TMR2    = 0xFFFF;                   // Set to reload immediately
 101   1         ET2     = 1;                        // Enable Timer2 interrupts
 102   1         TR2     = 1;                        // Start Timer2
 103   1      
 104   1         SFRPAGE = sfrpage_save;
 105   1      }
 106          
 107          
 108          
 109          //-----------------------------------------------------------------------------
 110          // ADC0_Init
 111          //-----------------------------------------------------------------------------
 112          void ADC0_Init (void)
 113          {
 114   1         U8 SFRPAGE_save = SFRPAGE;
 115   1         SFRPAGE = ACTIVE_PAGE;
 116   1      
 117   1         // Initialize the Gain to account for a 5V input and 2.25 VREF
C51 COMPILER V7.06   MCU_INIT                                                              08/13/2010 10:00:45 PAGE 3   

 118   1         // Solve the equation provided in Section 9.3.1 of the Datasheet
 119   1      
 120   1         // The 5V input is scaled by a factor of 0.44 so that the maximum input
 121   1         // voltage seen by the pin is 2.2V
 122   1      
 123   1         // 0.44 = (GAIN/4096) + GAINADD * (1/64)
 124   1      
 125   1         // Set GAIN to 0x6CA and GAINADD to 1
 126   1         // GAIN = is the 12-bit word formed by ADC0GNH[7:0] ADC0GNL[7:4]
 127   1         // GAINADD is bit ADC0GNA.0
 128   1      
 129   1         ADC0CF |= 0x01;                     // Set GAINEN = 1
 130   1         ADC0H   = 0x04;                     // Load the ADC0GNH address
 131   1         ADC0L   = 0x6C;                     // Load the upper byte of 0x6CA to 
 132   1                                             // ADC0GNH
 133   1         ADC0H   = 0x07;                     // Load the ADC0GNL address
 134   1         ADC0L   = 0xA0;                     // Load the lower nibble of 0x6CA to 
 135   1                                             // ADC0GNL
 136   1         ADC0H   = 0x08;                     // Load the ADC0GNA address
 137   1         ADC0L   = 0x01;                     // Set the GAINADD bit
 138   1         ADC0CF &= ~0x01;                    // Set GAINEN = 0
 139   1      
 140   1         ADC0CN = 0x03;                      // ADC0 disabled, normal tracking,
 141   1                                             // conversion triggered on TMR2 overflow
 142   1                                             // Output is right-justified
 143   1      
 144   1         REF0CN = 0x33;                      // Enable on-chip VREF and buffer
 145   1                                             // Set voltage reference to 2.25V
 146   1      
 147   1         ADC0MX = 0x0B;                      // Set ADC input to P1.2
 148   1      
 149   1         ADC0CF = ((SYSCLK / 3000000) - 1) << 3;   // Set SAR clock to 3MHz
 150   1      
 151   1         EIE1 |= 0x04;                       // Enable ADC0 conversion complete int.
 152   1      
 153   1         AD0EN = 1;                          // Enable ADC0
 154   1      
 155   1         SFRPAGE = SFRPAGE_save;
 156   1      }
 157          
 158          
 159          
 160          
 161          //-----------------------------------------------------------------------------
 162          // End Of File
 163          //-----------------------------------------------------------------------------
 164          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    140    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
